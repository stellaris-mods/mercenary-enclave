###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###

namespace = mercRelations

# The events in this file were initially copied from guardian_events.txt.
# But have since been modified quite heavily.
# ZZZ Try not renaming event targets, they might be used in localisations

# on_fleet_destroyed_victim
country_event = {
	id = mercRelations.140
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		# Allow this to trigger even on the exploration science vessel, which
		# means if anyone kills it somehow, they get the prize!
		is_country_type = "fmerc_enclave"
	}
	immediate = {
		FROMFROM = { solar_system = { save_event_target_as = trader_system } }
		FROM = {
			country_event = { id = mercRelations.141 }
			change_variable = {
				which = "MercCustomOpinion"
				value = 10
			}
			save_event_target_as = trader_destroyer
		}

		# If we have zero fleets left, we are dead, so notify customers
		if = {
			limit = { count_owned_ships { count = 0 } }
			every_country = {
				limit = {
					has_communications = ROOT
					NOT = { is_country = event_target:trader_destroyer }
				}
				country_event = { id = mercRelations.142 }
			}

			# Destroy any active operations and ourselves
			every_country = {
				limit = { is_country_type = "fmerc_operations" }
				destroy_country = yes
			}
			destroy_country = yes
		}
	}
}

country_event = {
	id = mercRelations.141
	title = "merc.attacker.title"
	desc = "merc.attacker.desc"
	picture = GFX_evt_space_debris
	location = event_target:trader_system
	show_sound = event_ship_bridge
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		add_minerals = 8000
		add_energy = 8000
	}
}

# Mercenary Destroyed
# Notification for everyone who had contact with the enclave except attacker
# Only when the enclave is totally obliterated.
country_event = {
	id = mercRelations.142
	title = "leviathans.141"
	desc = merc.destroyed.desc
	picture = GFX_evt_exploding_ship
	location = event_target:trader_system
	show_sound = event_ship_explosion
	is_triggered_only = yes

	immediate = {
		add_opinion_modifier = {
			who = event_target:trader_destroyer
			modifier = opinion_destroyed_mercenary
		}
	}

	option = { name = "merc.destroyed.button" }
}

# on_entering_battle
# This retarded event triggers randomly 2-4 times in a row on the same scope
country_event = {
	id = mercRelations.155
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		FROM = { is_country_type = "fmerc_enclave" }
		FROMFROMFROM = { merc_is_station = yes }
	}
	immediate = {
		change_variable = {
			which = "MercCustomOpinion"
			value = 33
		}
		log = "[this.GetName]: Reduced Mercenary opinion by -33 to -[this.MercCustomOpinion]."
	}
}
