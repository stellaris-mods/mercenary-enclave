###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
# Copyright (c) 2018 stark43@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


namespace = mercInit

# Only triggers once, across savegames, per game.
#
# I only use a country_event because event= behaves weirdly.
#
# While the initializer has a chance of 100, this event
# ensures that the enclave is spawned into existing games
# on load, if the addon was subscribed to after game creation.
#
country_event = {
	id = mercInit.1
	hide_window = yes
	fire_only_once = yes

	immediate = {
		if = {
			limit = {
				NOT = { any_system = { has_star_flag = "folk_mercenary_system" } }
			}
			random_system = {
				limit = {
					NOR = {
						exists = space_owner
						has_star_flag = "tiyanki_home_system"
						has_star_flag = "void_system"
						has_star_flag = "primitive_system"
						has_star_flag = "elite_system"
						has_star_flag = "hostile_system"
						has_star_flag = "sanctuary_system"
						has_star_flag = "pirate_system"
						has_star_flag = "enclave"
						has_star_flag = "guardian"
						has_star_flag = "guardians_wraith_system"
						has_star_flag = "guardians_curators_system"
						has_star_flag = "guardians_traders_system"
						has_star_flag = "guardians_dragon_system"
						has_star_flag = "guardians_stellarite_system"
						has_star_flag = "guardians_stellarite_about_to_spawn"
						has_star_flag = "stellarite_present"
						has_star_flag = "guardians_technosphere_system"
						has_star_flag = "guardians_horror_system"
						has_star_flag = "horror_spawned"
						has_star_flag = "guardians_dreadnought_system"
						has_star_flag = "guardians_hive_system"
						has_star_flag = "guardians_artists_system"
						has_star_flag = "guardians_fortress_system"
						has_star_flag = "enigmatic_system"
						has_star_flag = "vechtar_zavonia_system"
						has_star_flag = "pirate_enclave_system"
						has_star_flag = "guardians_hatchling_system"
						has_star_flag = "primitive_robot_system"
						has_star_flag = "superflare_system"
						has_star_flag = "collapse_system"
						has_star_flag = "old_foes_system"
						has_star_flag = "scavenger_bot_system"
						has_star_flag = "living_planet_system"
						has_star_flag = "elderly_tiyanki_system"
						has_star_flag = "ruined_empire"
						has_star_flag = "escape_pod_system"
						has_star_flag = "graygoo_factory_system"
						has_star_flag = "marauder_capital_1"
						has_star_flag = "marauder_capital_2"
						has_star_flag = "marauder_capital_3"
						has_star_flag = "marauder_system"
						
						any_planet = { is_capital = yes }
						any_neighbor_system = { any_planet = { is_capital = yes } }
					}
				}
				save_event_target_as = spawn
			}
			if = {
				limit = { NOT = { exists = event_target:spawn } }
				random_system = {
					limit = {
						NOR = {
							exists = space_owner
							any_planet = { is_capital = yes }
							any_neighbor_system = { any_planet = { is_capital = yes } }
						}
					}
					save_event_target_as = spawn
				}
				if = {
					limit = { NOT = { exists = event_target:spawn } }
					random_rim_system = {
						limit = {
							NOT = {
								exists = space_owner
							}
						}
						save_event_target_as = spawn
					}
					if = {
						limit = { NOT = { exists = event_target:spawn } }
						random_rim_system = {
							save_event_target_as = spawn
						}
					}
				}
			}

			event_target:spawn = {
				spawn_system = {
					min_distance = 20
					max_distance = 50
					initializer = "folk_merc_init"
				}
			}
		}
	}
}

event = {
	id = mercInit.10
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# This gates the very cheap cost modifier you get with high trust
		# levels, because getting high trust levels with the enclave was
		# exceptionally easy before. Now, there is essentially no way
		# to get it except to deposit lots of resources with them.
		# Which means you'll probably use their operations more often.
		set_global_flag = "has_mercenary_enclave_v2"
	}
}
