###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
# Copyright (c) 2018 stark43@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###



# STAGE 2
# - Operation actually begins, this is after a random delay
#   from when the buyer actually pays. Depending on operation.
# - ROOT/THIS is always the mercenary operations country
# - event_targets merc_buyer and merc_country always exist
# - Must chain to the specific operation types init event

fmerc_init_stage2 = {
	merc_set_buyer = yes
	merc_set_country = yes

	log = "Stage 2: Launching operation"

	if = {
		limit = { fmerc_enclave_exists = no }

		log = "Mercenary Enclave no longer exists, aborting operation."

		merc_stage4_abort = yes
		set_country_flag = "fmerc_ops_completed"
		break = yes
	}
	if = {
		limit = {
			NOT = { exists = event_target:merc_buyer }
		}

		log = "The country who ordered this operation no longer exists, aborting operation."

		merc_stage4_abort = yes
		set_country_flag = "fmerc_ops_completed"
		break = yes
	}

	# Debug scope printing targets
	if = { limit = { has_global_flag = "debug" }
		log = "Buyer is: [merc_buyer.GetName]."
		log = "Target is [merc_country.GetName]."
	}
	
	merc_verify_country = yes

	merc_set_new_targets = yes
	merc_verify_current_target = yes

	# ZZZ I'm not sure if the AI still does this in 1.8+
	# The AI has/had a habit of splitting and merging fleets 24/7.
	# At least they did in 1.4.x and earlier. That's mainly why we mark
	# targets like this. We only do this for the initial targets. Later
	# when we restart operations, a single event_target will suffice.
	event_target:merc_current_target = {
		if = { limit = { exists = fleet } # Dont tag planets
			fleet = { # every_owned_ship doesnt' work in fleet scope, this tags max 100x
				while = { limit = { any_owned_ship = { NOT = { has_ship_flag = "merc_target" } } }
					random_owned_ship = {
						limit = { NOT = { has_ship_flag = "merc_target" } }
						PREVPREVPREV = { change_variable = { which = "MercTargetCount" value = 0.7 } }
						set_ship_flag = "merc_target"
					}
				}
			}
		}
	}

	log = "#[this.MercTargetCount] targets, first target is [merc_current_target.GetName]."
	merc_stage2_operation_start = yes
}

merc_stage2_operation_start = {

	if = {
		limit = { count_owned_ships { count = 0 } }
		log = "merc_stage2_operation_start count = 0, fleet will be spawned."
		merc_spawn_fleet = yes
	}

	every_owned_fleet = {
		clear_fleet_actions = this
		fleet_event = { id = mercControllerFleet.100 }
	}
}
