###
# This file is part of a project hosted at https://github.com/stellaris-mods
# Copyright (c) 2017 folk@folk.wtf
# Copyright (c) 2018 stark43@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
###


merc_set_found_target = {

	# Debug scope printing standard and targets
	if = { limit = { has_global_flag = "debug" }
		log = "merc_set_found_target Printing the current scopes (trigger) -"
		target_scopes_log = yes
		print_scope_effect = yes
	}

	set_ship_flag = "merc_target"
	PREVPREVPREV = { set_country_flag = "merc_found_target" }
}

merc_set_new_targets = {
	set_variable = { which = "MercTmp" value = "MercTargetCount" }
	set_country_flag = "merc_found_target"
	set_variable = { which = "MercTargetsFound" value = 0 }

	while = {
		limit = {
			check_variable = { which = "MercTmp" value > 0 }
			has_country_flag = "merc_found_target"
		}
		subtract_variable = { which = "MercTmp" value = 1 }
		remove_country_flag = "merc_found_target"
		switch = {
			trigger = has_country_flag
			merc_op_spaceport  = { merc_set_target_spaceport = yes }
			merc_op_liberate   = { merc_set_target_liberate = yes }
			merc_op_civilian   = { merc_set_target_civilian = yes }
			merc_op_military   = { merc_set_target_military = yes }
			merc_op_clear      = { merc_set_target_clear = yes }
		}
		if = { limit = { has_country_flag = "merc_found_target" }
			change_variable = { which = "MercTargetsFound" value = 1 }
		}
	}
	if = { limit = { NOT = { check_variable = { which = "MercTargetsFound" value > 0 } } }

		log = "We did not find ANY valid targets, so abort immediately."

		merc_stage4_abort = yes
		set_country_flag = "fmerc_ops_completed"	
		set_country_flag = "fmerc_no_valid_targets"

		break = yes
	}
	if = {
		limit = { NOT = { has_country_flag = "merc_found_target" } }
		log = "We did not find enough ([this.MercTargetCount]) valid targets, but we found [this.MercTargetsFound]."
		remove_country_flag = "merc_found_target"
	}

	merc_get_target = yes
}
